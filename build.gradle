buildscript {
    ext.kotlin_version = '1.3.72'
    ext.bascule_lib_version = '0.0.26'

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'com.github.johnrengelman.shadow' version '4.0.3'
}

group 'org.liamjd.bascule'
version '0.0.11'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

apply plugin: 'kotlinx-serialization'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // bascule library
	implementation group: 'org.liamjd.bascule-lib', name: 'bascule-lib', version: "$bascule_lib_version"

    // pdf generation
    compile group: 'org.apache.xmlgraphics', name: 'fop', version: '2.3'

    // jsoup HTML parser library @ https://jsoup.org/
    compile 'org.jsoup:jsoup:1.11.3'
    
    // amazon aws s3 functions
    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.515'

    // kotlinx serialization, for lunr json
    compile 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0'

    // testing - junit
    testCompile("org.junit.jupiter:junit-jupiter-api:5.3.2")
    testCompile("org.junit.jupiter:junit-jupiter-params:5.3.2")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.3.2")

    // test - mocking
    testImplementation "io.mockk:mockk:1.9.3.kotlin12"

    // testing - coroutines
    testCompile(group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.0.1')
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// configure shadowJar
shadowJar {
    baseName = 'bascule-extras'
    classifier = null
}
// don't include the kotlin runtime in the jar
configurations {
    runtime.exclude module: 'kotlin-stdlib-jdk8'
    runtime.exclude module: 'bascule-lib'
}
